"use client";

import { useState } from 'react';
import Head from 'next/head';
import styles from './styles/Home.module.css';

const USERS = [
  "Panda Introvertboy",
  "Autswin Aftershock",
  "ART Charlotte",
  "Foy Cyril",
  "Hime Barbatos",
  "Dave Barbatos",
  "Beta Overdose",
  "Cherbi Kouzen",
  "Momo Barbatos",
  "Argo Baker",
  "Porch Phetkasem",
  "Jackie Notperfect",
  "Minnie Classic",
  "Leon Classic",
  "Pad Ravenwood",
  "Maboo Monstar",
  "Teddy Teletla",
  "Sickboy PhetKasem",
  "Justwyn Justwyn",
  "Itar Phetkasem",
];

export default function CheckinForm() {
  const [name, setName] = useState(USERS[0]);
  const [activity, setActivity] = useState('');
  const [image, setImage] = useState<File | null>(null);
  const [status, setStatus] = useState('‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö');

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!image) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á");
      return;
    }

    const webhookUrl = "https://discord.com/api/webhooks/1400046836131299348/j2g_XnSCSQotXrbQsngY4pKFIFL5wMjetjqCShnugMYijMzcts3imUuo-QwAKPkyd3iD";
    const formData = new FormData();
    formData.append("file", image);
    formData.append(
      "payload_json",
      JSON.stringify({
        content: `üìã Check-in ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${name}\n‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${activity}\n‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status}`,
      })
    );

    await fetch(webhookUrl, {
      method: "POST",
      body: formData,
    });

    alert("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
    const existingData = JSON.parse(localStorage.getItem("checkins") || "[]");
    const newData = {
      name,
      activity,
      status,
      image: URL.createObjectURL(image),
      time: new Date().toISOString(),
    };
    localStorage.setItem("checkins", JSON.stringify([newData, ...existingData]));

    setActivity("");
    setImage(null);
    setStatus("‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö");
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Check-in App</title>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Check-in</h1>

        <form onSubmit={handleSubmit} className={styles.form}>
          <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</label>
          <select value={name} onChange={(e) => setName(e.target.value)}>
            {USERS.map((user) => (
              <option key={user}>{user}</option>
            ))}
          </select>

          <label>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</label>
          <input
            type="text"
            value={activity}
            onChange={(e) => setActivity(e.target.value)}
            required
          />

          <label>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</label>
          <input
            type="file"
            accept="image/*"
            onChange={(e) => {
              const file = e.target.files?.[0];
              if (file) {
                setImage(file);
              }
            }}
            required
          />

          <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</label>
          <select value={status} onChange={(e) => setStatus(e.target.value)}>
            <option>‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</option>
            <option>‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß</option>
            <option>‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</option>
          </select>

          <button type="submit">üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Check-in</button>
        </form>

        <a
          href={`/history?user=${encodeURIComponent(name)}`}
          style={{ color: "#facc15", marginTop: "1rem", display: "inline-block" }}
        >
          ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£ Check-in ‚Üí
        </a>
        <a
          href="/admin"
          style={{ color: "#facc15", marginTop: "1rem", display: "inline-block" }}
        >
          ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Admin ‚Üí
        </a>
      </main>
    </div>
  );
}
