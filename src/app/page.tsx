'use client';

import { useState } from 'react';

const USERS = [
  "Panda Introvertboy", "Autswin Aftershock", "ART Charlotte",
  "Foy Cyril", "Hime Barbatos", "Dave Barbatos", "Beta Overdose",
  "Cherbi Kouzen", "Momo Barbatos", "Argo Baker", "Porch Phetkasem",
  "Jackie Notperfect", "Minnie Classic", "Leon Classic", "Pad Ravenwood",
  "Maboo Monstar", "Teddy Teletla", "Sickboy PhetKasem", "Justwyn Justwyn", "Itar Phetkasem"
];

export default function CheckinForm() {
  const [name, setName] = useState(USERS[0]);
  const [activity, setActivity] = useState('');
  const [image, setImage] = useState<File | null>(null);
  const [status, setStatus] = useState('‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö');

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!image) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á");
      return;
    }

    const webhookUrl = 'https://discord.com/api/webhooks/xxx'; // ‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ webhook ‡∏à‡∏£‡∏¥‡∏á
    const formData = new FormData();
    formData.append('file', image);
    formData.append('payload_json', JSON.stringify({
      content: `üìã Check-in ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${name}\n‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${activity}\n‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status}`
    }));

    await fetch(webhookUrl, {
      method: 'POST',
      body: formData
    });

    const localUrl = URL.createObjectURL(image);
    const newCheckin = {
      name, activity, status,
      image: localUrl,
      time: new Date().toISOString()
    };

    const oldData = JSON.parse(localStorage.getItem('checkins') || '[]');
    localStorage.setItem('checkins', JSON.stringify([newCheckin, ...oldData]));

    alert('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    setActivity('');
    setImage(null);
    setStatus('‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö');
  };

  return (
    <div style={{ padding: '2rem', maxWidth: 600, margin: '0 auto' }}>
      <h1>‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏° Check-in</h1>
      <form onSubmit={handleSubmit}>
        <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</label>
        <select value={name} onChange={(e) => setName(e.target.value)}>
          {USERS.map(user => <option key={user}>{user}</option>)}
        </select>

        <label>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</label>
        <input value={activity} onChange={(e) => setActivity(e.target.value)} required />

        <label>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ</label>
        <input type="file" accept="image/*" onChange={(e) => {
          if (e.target.files?.[0]) setImage(e.target.files[0]);
        }} required />

        <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</label>
        <select value={status} onChange={(e) => setStatus(e.target.value)}>
          <option>‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</option>
          <option>‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß</option>
          <option>‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</option>
        </select>

        <button type="submit">üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Check-in</button>
      </form>

      <div style={{ marginTop: '1rem' }}>
        <a href={`/history?user=${encodeURIComponent(name)}`}>üìÑ ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</a><br />
        <a href="/admin">üõ†Ô∏è ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•</a>
      </div>
    </div>
  );
}
