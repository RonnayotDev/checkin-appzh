// app/summary/page.tsx

'use client';

import { useEffect, useState } from 'react';

// ‚ú® 1. ‡πÉ‡∏™‡πà Webhook URL ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
const DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1400046836131299348/j2g_XnSCSQotXrbQsngY4pKFIFL5wMjetjqCShnugMYijMzcts3imUuo-QwAKPkyd3iD';

// --- CSS Styles for the Summary Page (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°) ---
const styles = `
  /* ... CSS ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° ... */
  .summary-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  .header-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }
  .send-discord-btn {
    background-color: #5865F2; /* Discord Blurple */
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 8px;
    cursor: pointer;
    font-weight: bold;
    font-size: 0.9rem;
    transition: background-color 0.2s;
  }
  .send-discord-btn:hover {
    background-color: #4752C4;
  }
  .send-discord-btn:disabled {
    background-color: #555;
    cursor: not-allowed;
  }
  /* ... ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á CSS ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° ... */
`;

const ALL_USERS = [
  "Panda Introvertboy", "Autswin Aftershock", "ART Charlotte",
  "Foy Cyril", "Hime Barbatos", "Dave Barbatos", "Beta Overdose",
  "Cherbi Kouzen", "Momo Barbatos", "Argo Baker", "Porch Phetkasem",
  "Jackie Notperfect", "Minnie Classic", "Leon Classic", "Pad Ravenwood",
  "Maboo Monstar", "Teddy Teletla", "Sickboy PhetKasem", "Justwyn Justwyn", "Itar Phetkasem"
];

const toYYYYMMDD = (date: Date) => {
  return date.toISOString().split('T')[0];
};

export default function DailySummaryPage() {
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [summary, setSummary] = useState<{ checkedIn: any[]; missing: string[] }>({
    checkedIn: [],
    missing: [],
  });
  // ‚ú® 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
  const [isSending, setIsSending] = useState(false);


  useEffect(() => {
    // ... ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô useEffect ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° ...
    const allCheckins = JSON.parse(localStorage.getItem('checkins') || '[]');
    const targetDateStr = toYYYYMMDD(selectedDate);
    const todaysCheckins = allCheckins.filter((item: any) => toYYYYMMDD(new Date(item.time)) === targetDateStr);
    const checkedInNames = new Set(todaysCheckins.map((item: any) => item.name));
    const missingNames = ALL_USERS.filter(user => !checkedInNames.has(user));
    setSummary({ checkedIn: todaysCheckins, missing: missingNames });
  }, [selectedDate]);

  // ‚ú® 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord
  const handleSendToDiscord = async () => {
    setIsSending(true);

    const checkedInList = summary.checkedIn.map(item => `- ${item.name}`).join('\n') || '‡πÑ‡∏°‡πà‡∏°‡∏µ';
    const missingList = summary.missing.map(name => `- ${name}`).join('\n') || '‡πÑ‡∏°‡πà‡∏°‡∏µ (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô Check-in ‡∏Ñ‡∏£‡∏ö)';
    
    const embed = {
      title: `üìä ‡∏™‡∏£‡∏∏‡∏õ Check-in ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${selectedDate.toLocaleDateString('th-TH', { dateStyle: 'long' })}`,
      color: 3447003, // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤
      fields: [
        {
          name: `‚úÖ Check-in ‡πÅ‡∏•‡πâ‡∏ß (${summary.checkedIn.length} ‡∏Ñ‡∏ô)`,
          value: "```" + checkedInList + "```", // ‡πÉ‡∏ä‡πâ code block ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
          inline: true,
        },
        {
          name: `‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà Check-in (${summary.missing.length} ‡∏Ñ‡∏ô)`,
          value: "```" + missingList + "```",
          inline: true,
        },
      ],
      timestamp: new Date().toISOString(),
      footer: {
        text: '‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•',
      },
    };

    try {
      const response = await fetch(DISCORD_WEBHOOK_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ embeds: [embed] }),
      });
      if (!response.ok) {
        throw new Error(`Error: ${response.status}`);
      }
      alert('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
    } catch (error) {
      console.error('Failed to send summary to Discord:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ');
    }

    setIsSending(false);
  };

  return (
    <>
      <style>{styles}</style>
      <div className="summary-container">
        <div className="summary-header">
          <h1>üìä ‡∏™‡∏£‡∏∏‡∏õ Check-in ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</h1>
          {/* ‚ú® 4. ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á Discord */}
          <div className="header-controls">
            <input
              type="date"
              className="date-picker"
              value={toYYYYMMDD(selectedDate)}
              onChange={(e) => setSelectedDate(new Date(e.target.value))}
            />
            <button
              className="send-discord-btn"
              onClick={handleSendToDiscord}
              disabled={isSending}
            >
              {isSending ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...' : 'üöÄ ‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Discord'}
            </button>
          </div>
        </div>

        {/* ... ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á JSX ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° ... */}
        <div className="summary-grid">
           {/* ... */}
        </div>
      </div>
    </>
  );
}